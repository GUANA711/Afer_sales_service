<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zgl.aftersales.dao.QuestionMapper">

    <cache/>

    <select id="findAll" resultType="com.zgl.aftersales.pojo.Users">
        SELECT * FROM users
    </select>

<!--参数-->
    <insert id="addQuestion" parameterType="com.zgl.aftersales.pojo.Question">
             INSERT INTO questions(item_id,Question_type,Question_status,Question_detail,User_id,Commit_time) VALUES(#{ item_id },#{ Question_type },#{ Question_status },#{ Question_detail },#{ User_id},#{ Commit_time })
    </insert>

    <select id="checkQuestion" parameterType="int" resultType="com.zgl.aftersales.pojo.Question">
             SELECT * FROM questions WHERE Question_id = #{ Question_id }
    </select>

    <select id="checkQuestionsubmited" parameterType="int" resultType="com.zgl.aftersales.pojo.Question">
             SELECT * FROM questions WHERE User_id = #{ User_id } and Question_status = "accepted"
    </select>

    <select id="checkQuestionfinished" parameterType="int" resultType="com.zgl.aftersales.pojo.Question">
             SELECT * FROM questions WHERE User_id = #{ User_id } and Question_status = "done"
    </select>

    <select id="checkQuestiondealing" parameterType="int" resultType="com.zgl.aftersales.pojo.Question">
             SELECT * FROM questions WHERE User_id = #{ User_id } and Question_status = "processing"
    </select>


<!--   zgl-->
    <select id="checkPostMan" parameterType="int" resultType="com.zgl.aftersales.pojo.Users">
             SELECT * FROM users WHERE User_id = #{ User_id }
    </select>
    <select id="showAllQuestions" resultType="com.zgl.aftersales.pojo.Question">
        select * from questions
    </select>
    <select id="fuzzyQuery" parameterType="String" resultType="com.zgl.aftersales.pojo.Question">
        select * from questions where item_id like CONCAT(CONCAT('%', #{text}), '%') or Question_type like CONCAT(CONCAT('%', #{text}), '%') or Question_status like CONCAT(CONCAT('%', #{text}), '%') or Question_detail like CONCAT(CONCAT('%', #{text}), '%') or User_id like CONCAT(CONCAT('%', #{text}), '%') or Commit_time like CONCAT(CONCAT('%', #{text}), '%')
    </select>
    <select id="selectAll_id" resultType="integer">
        select Question_id from questions
    </select>
    <select id="selectWorkerByQuesID" parameterType="String" resultType="String">
       select distinct User_name from users s,questions t where s.Item_id=t.Item_id and t.Question_id=#{id} and s.Task_num &lt; 10
    </select>
    <update id="updateStatus" parameterType="String">
        update questions set Question_status='accepted' where Question_id=#{questionID}
    </update>

    <select id="showOvertimeAccepte" resultType="com.zgl.aftersales.pojo.Question">
        select * from questions q ,maintenance m where q.Question_id=m.Question_id and Question_status='overtime'
    </select>
    <select id="shoeOvertimeUnaccepte" resultType="com.zgl.aftersales.pojo.Question">
        select * from questions where Question_status='overtime' and Question_id not in (select q.Question_id  from questions q ,maintenance m where q.Question_id=m.Question_id and Question_status='overtime')
    </select>





    <update id="updateUser" parameterType="com.zgl.aftersales.pojo.Users">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update users
            <set>
                <if test="item.User_id != null">User_id=#{item.User_id},</if>
                <if test="item.User_name != null">User_name=#{item.User_name},</if>
                <if test="item.Password != null">Password=#{item.Password},</if>
                <if test="item.Tel != null">Tel=#{item.Tel},</if>
                <if test="item.Email != null">Email=#{item.Email},</if>
                <if test="item.Task_num != null">Task_num=#{item.Task_num},</if>
                <if test="item.Role_id != null">Role_id=#{item.Role_id},</if>
            </set>
            where User_id = #{item.User_id}
        </foreach>
    </update>









</mapper>